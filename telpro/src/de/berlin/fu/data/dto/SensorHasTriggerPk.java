/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package de.berlin.fu.data.dto;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

/** 
 * This class represents the primary key of the Sensor_has_Trigger table.
 */
public class SensorHasTriggerPk implements Serializable
{
	protected String sensorIdsensor;

	protected int triggerIdtrigger;

	/** 
	 * This attribute represents whether the primitive attribute triggerIdtrigger is null.
	 */
	protected boolean triggerIdtriggerNull;

	/** 
	 * Sets the value of sensorIdsensor
	 */
	public void setSensorIdsensor(String sensorIdsensor)
	{
		this.sensorIdsensor = sensorIdsensor;
	}

	/** 
	 * Gets the value of sensorIdsensor
	 */
	public String getSensorIdsensor()
	{
		return sensorIdsensor;
	}

	/** 
	 * Sets the value of triggerIdtrigger
	 */
	public void setTriggerIdtrigger(int triggerIdtrigger)
	{
		this.triggerIdtrigger = triggerIdtrigger;
	}

	/** 
	 * Gets the value of triggerIdtrigger
	 */
	public int getTriggerIdtrigger()
	{
		return triggerIdtrigger;
	}

	/**
	 * Method 'SensorHasTriggerPk'
	 * 
	 */
	public SensorHasTriggerPk()
	{
	}

	/**
	 * Method 'SensorHasTriggerPk'
	 * 
	 * @param sensorIdsensor
	 * @param triggerIdtrigger
	 */
	public SensorHasTriggerPk(final String sensorIdsensor, final int triggerIdtrigger)
	{
		this.sensorIdsensor = sensorIdsensor;
		this.triggerIdtrigger = triggerIdtrigger;
	}

	/** 
	 * Sets the value of triggerIdtriggerNull
	 */
	public void setTriggerIdtriggerNull(boolean triggerIdtriggerNull)
	{
		this.triggerIdtriggerNull = triggerIdtriggerNull;
	}

	/** 
	 * Gets the value of triggerIdtriggerNull
	 */
	public boolean isTriggerIdtriggerNull()
	{
		return triggerIdtriggerNull;
	}

	/**
	 * Method 'equals'
	 * 
	 * @param _other
	 * @return boolean
	 */
	public boolean equals(Object _other)
	{
		if (_other == null) {
			return false;
		}
		
		if (_other == this) {
			return true;
		}
		
		if (!(_other instanceof SensorHasTriggerPk)) {
			return false;
		}
		
		final SensorHasTriggerPk _cast = (SensorHasTriggerPk) _other;
		if (sensorIdsensor == null ? _cast.sensorIdsensor != sensorIdsensor : !sensorIdsensor.equals( _cast.sensorIdsensor )) {
			return false;
		}
		
		if (triggerIdtrigger != _cast.triggerIdtrigger) {
			return false;
		}
		
		if (triggerIdtriggerNull != _cast.triggerIdtriggerNull) {
			return false;
		}
		
		return true;
	}

	/**
	 * Method 'hashCode'
	 * 
	 * @return int
	 */
	public int hashCode()
	{
		int _hashCode = 0;
		if (sensorIdsensor != null) {
			_hashCode = 29 * _hashCode + sensorIdsensor.hashCode();
		}
		
		_hashCode = 29 * _hashCode + triggerIdtrigger;
		_hashCode = 29 * _hashCode + (triggerIdtriggerNull ? 1 : 0);
		return _hashCode;
	}

	/**
	 * Method 'toString'
	 * 
	 * @return String
	 */
	public String toString()
	{
		StringBuffer ret = new StringBuffer();
		ret.append( "de.berlin.fu.data.dto.SensorHasTriggerPk: " );
		ret.append( "sensorIdsensor=" + sensorIdsensor );
		ret.append( ", triggerIdtrigger=" + triggerIdtrigger );
		return ret.toString();
	}

}
