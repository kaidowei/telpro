/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package de.berlin.fu.data.dto;

import java.io.Serializable;

/**
 * This class represents the primary key of the Sensor_has_PropertyType table.
 */
public class SensorHasPropertytypePk implements Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = -9179117671223731192L;

	protected String sensorIdsensor;

	protected int propertytypeIdpropertytype;

	/**
	 * This attribute represents whether the primitive attribute
	 * propertytypeIdpropertytype is null.
	 */
	protected boolean propertytypeIdpropertytypeNull;

	/**
	 * Sets the value of sensorIdsensor
	 */
	public void setSensorIdsensor(String sensorIdsensor) {
		this.sensorIdsensor = sensorIdsensor;
	}

	/**
	 * Gets the value of sensorIdsensor
	 */
	public String getSensorIdsensor() {
		return sensorIdsensor;
	}

	/**
	 * Sets the value of propertytypeIdpropertytype
	 */
	public void setPropertytypeIdpropertytype(int propertytypeIdpropertytype) {
		this.propertytypeIdpropertytype = propertytypeIdpropertytype;
	}

	/**
	 * Gets the value of propertytypeIdpropertytype
	 */
	public int getPropertytypeIdpropertytype() {
		return propertytypeIdpropertytype;
	}

	/**
	 * Method 'SensorHasPropertytypePk'
	 * 
	 */
	public SensorHasPropertytypePk() {
	}

	/**
	 * Method 'SensorHasPropertytypePk'
	 * 
	 * @param sensorIdsensor
	 * @param propertytypeIdpropertytype
	 */
	public SensorHasPropertytypePk(final String sensorIdsensor,
			final int propertytypeIdpropertytype) {
		this.sensorIdsensor = sensorIdsensor;
		this.propertytypeIdpropertytype = propertytypeIdpropertytype;
	}

	/**
	 * Sets the value of propertytypeIdpropertytypeNull
	 */
	public void setPropertytypeIdpropertytypeNull(
			boolean propertytypeIdpropertytypeNull) {
		this.propertytypeIdpropertytypeNull = propertytypeIdpropertytypeNull;
	}

	/**
	 * Gets the value of propertytypeIdpropertytypeNull
	 */
	public boolean isPropertytypeIdpropertytypeNull() {
		return propertytypeIdpropertytypeNull;
	}

	/**
	 * Method 'equals'
	 * 
	 * @param _other
	 * @return boolean
	 */
	public boolean equals(Object _other) {
		if (_other == null) {
			return false;
		}

		if (_other == this) {
			return true;
		}

		if (!(_other instanceof SensorHasPropertytypePk)) {
			return false;
		}

		final SensorHasPropertytypePk _cast = (SensorHasPropertytypePk) _other;
		if (sensorIdsensor == null ? _cast.sensorIdsensor != sensorIdsensor
				: !sensorIdsensor.equals(_cast.sensorIdsensor)) {
			return false;
		}

		if (propertytypeIdpropertytype != _cast.propertytypeIdpropertytype) {
			return false;
		}

		if (propertytypeIdpropertytypeNull != _cast.propertytypeIdpropertytypeNull) {
			return false;
		}

		return true;
	}

	/**
	 * Method 'hashCode'
	 * 
	 * @return int
	 */
	public int hashCode() {
		int _hashCode = 0;
		if (sensorIdsensor != null) {
			_hashCode = 29 * _hashCode + sensorIdsensor.hashCode();
		}

		_hashCode = 29 * _hashCode + propertytypeIdpropertytype;
		_hashCode = 29 * _hashCode + (propertytypeIdpropertytypeNull ? 1 : 0);
		return _hashCode;
	}

	/**
	 * Method 'toString'
	 * 
	 * @return String
	 */
	public String toString() {
		StringBuffer ret = new StringBuffer();
		ret.append("de.berlin.fu.data.dto.SensorHasPropertytypePk: ");
		ret.append("sensorIdsensor=" + sensorIdsensor);
		ret.append(", propertytypeIdpropertytype=" + propertytypeIdpropertytype);
		return ret.toString();
	}

}
