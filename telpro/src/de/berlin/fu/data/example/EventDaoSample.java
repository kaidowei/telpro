/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package de.berlin.fu.data.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import de.berlin.fu.data.dao.EventDao;
import de.berlin.fu.data.dto.Event;
import de.berlin.fu.data.exceptions.EventDaoException;
import de.berlin.fu.data.factory.EventDaoFactory;

public class EventDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findByEventType(0);
		// findBySensor("");
		// findByTrigger(0);
		// findWhereIdEventEquals(0);
		// findWhereEventtypeIdeventtypeEquals(0);
		// findWhereTimestampEquals(null);
		// findWhereSensorIdsensorEquals("");
		// findWhereTriggerIdtriggerEquals(0);
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			EventDao _dao = getEventDao();
			Event _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByEventType'
	 * 
	 * @param eventtypeIdeventtype
	 */
	public static void findByEventType(int eventtypeIdeventtype)
	{
		try {
			EventDao _dao = getEventDao();
			Event _result[] = _dao.findByEventType(eventtypeIdeventtype);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findBySensor'
	 * 
	 * @param sensorIdsensor
	 */
	public static void findBySensor(String sensorIdsensor)
	{
		try {
			EventDao _dao = getEventDao();
			Event _result[] = _dao.findBySensor(sensorIdsensor);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByTrigger'
	 * 
	 * @param triggerIdtrigger
	 */
	public static void findByTrigger(int triggerIdtrigger)
	{
		try {
			EventDao _dao = getEventDao();
			Event _result[] = _dao.findByTrigger(triggerIdtrigger);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdEventEquals'
	 * 
	 * @param idEvent
	 */
	public static void findWhereIdEventEquals(int idEvent)
	{
		try {
			EventDao _dao = getEventDao();
			Event _result[] = _dao.findWhereIdEventEquals(idEvent);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereEventtypeIdeventtypeEquals'
	 * 
	 * @param eventtypeIdeventtype
	 */
	public static void findWhereEventtypeIdeventtypeEquals(int eventtypeIdeventtype)
	{
		try {
			EventDao _dao = getEventDao();
			Event _result[] = _dao.findWhereEventtypeIdeventtypeEquals(eventtypeIdeventtype);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereTimestampEquals'
	 * 
	 * @param timestamp
	 */
	public static void findWhereTimestampEquals(Date timestamp)
	{
		try {
			EventDao _dao = getEventDao();
			Event _result[] = _dao.findWhereTimestampEquals(timestamp);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereSensorIdsensorEquals'
	 * 
	 * @param sensorIdsensor
	 */
	public static void findWhereSensorIdsensorEquals(String sensorIdsensor)
	{
		try {
			EventDao _dao = getEventDao();
			Event _result[] = _dao.findWhereSensorIdsensorEquals(sensorIdsensor);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereTriggerIdtriggerEquals'
	 * 
	 * @param triggerIdtrigger
	 */
	public static void findWhereTriggerIdtriggerEquals(int triggerIdtrigger)
	{
		try {
			EventDao _dao = getEventDao();
			Event _result[] = _dao.findWhereTriggerIdtriggerEquals(triggerIdtrigger);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getEventDao'
	 * 
	 * @return EventDao
	 */
	public static EventDao getEventDao()
	{
		return EventDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Event dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getIdEvent() );
		buf.append( ", " );
		buf.append( dto.getEventtypeIdeventtype() );
		buf.append( ", " );
		buf.append( dto.getTimestamp() );
		buf.append( ", " );
		buf.append( dto.getSensorIdsensor() );
		buf.append( ", " );
		buf.append( dto.getTriggerIdtrigger() );
		System.out.println( buf.toString() );
	}

}
