/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package de.berlin.fu.data.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import de.berlin.fu.data.dao.SensorDao;
import de.berlin.fu.data.dto.Sensor;
import de.berlin.fu.data.exceptions.SensorDaoException;
import de.berlin.fu.data.factory.SensorDaoFactory;

public class SensorDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findWhereIdSensorEquals("");
		// findWhereIpEquals(0);
		// findWhereLocationEquals("");
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			SensorDao _dao = getSensorDao();
			Sensor _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdSensorEquals'
	 * 
	 * @param idSensor
	 */
	public static void findWhereIdSensorEquals(String idSensor)
	{
		try {
			SensorDao _dao = getSensorDao();
			Sensor _result[] = _dao.findWhereIdSensorEquals(idSensor);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIpEquals'
	 * 
	 * @param ip
	 */
	public static void findWhereIpEquals(int ip)
	{
		try {
			SensorDao _dao = getSensorDao();
			Sensor _result[] = _dao.findWhereIpEquals(ip);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereLocationEquals'
	 * 
	 * @param location
	 */
	public static void findWhereLocationEquals(String location)
	{
		try {
			SensorDao _dao = getSensorDao();
			Sensor _result[] = _dao.findWhereLocationEquals(location);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getSensorDao'
	 * 
	 * @return SensorDao
	 */
	public static SensorDao getSensorDao()
	{
		return SensorDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Sensor dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getIdSensor() );
		buf.append( ", " );
		buf.append( dto.getIp() );
		buf.append( ", " );
		buf.append( dto.getLocation() );
		System.out.println( buf.toString() );
	}

}
